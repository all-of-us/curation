dependencies:
  override:
    # chmod to address a Circle "bug", since gcloud lives at /opt
    # and wants to make a .staging directory (as a sibling!)
    # when upgrading or installing new components.
    # - sudo chmod o+w /opt
    # CircleCI's version of pip can be out of date; make sure it's up-to-date first.
    - pip install --upgrade pip
    # Then install requirements needed to run our tools.
    - cd ~/curation/data_steward/ && pip install -t lib/ -r requirements.txt 
   
machine:
  pre:
    - ~/curation/data_steward/init_env.sh
    - cat $HOME/.circlerc
  environment:
    GOOGLE_APPLICATION_CREDENTIALS: "/home/ubuntu/gcloud-credentials-key.json"
    PYTHONPATH: "/usr/lib/google-cloud-sdk/platform/google_appengine/:~/curation/data_steward:~/curation/data_steward/lib"

  post:
    - echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - sudo apt-get update && sudo apt-get install google-cloud-sdk
    - sudo apt-get install google-cloud-sdk-app-engine-python
    - chmod 700 ./curation/data_steward/ci/activate_creds.sh && chmod 700 ./curation/data_steward/ci/setup.sh
    - ./curation/data_steward/ci/activate_creds.sh ~/gcloud-credentials-key.json
    - ./curation/data_steward/ci/setup.sh

test:
  override:
    - ~/curation/data_steward/test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/:
        timeout: 3000
      # If need be, comment out the above line and uncomment any of the following to run particular tests
      # - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r spec_test.py
      # - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r bq_utils_test.py
      # - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r validation_test.py:
      #     timeout: 1000
deployment:
  # Deploy develop branch to the aou-res-curation-test project whenever the tests pass
  test:
    branch: develop
    commands:
      # TODO privilege tests
      #- cd ~/curation/data_steward && chmod 700 generate_app_yaml.sh && chmod 700 ci/deploy.sh && ./ci/deploy.sh aou-res-curation-test

#  # To deploy to staging, cut a GitHub release on a green build, with tag of
#  # the form v0-1-1-rc0. We use tags as AppEngine version names, so they must
#  # follow AE rules (no dots).
#  staging:
#    # This should match _RELEASE_TAG_RE in release_notes.py.
#    tag: /v[0-9]+(-[0-9]+)*-rc[0-9]+[a-z]*/
#    commands:
#      - ./ci/activate_creds.sh ~/gcloud-credentials.key
#      - ./ci/release_notes.py all-of-us-rdr-staging
#      - ./tools/upgrade_database.sh -i https://all-of-us-rdr-staging.appspot.com --creds_file ~/gcloud-credentials.key:
#          pwd:
#            rest-api
#      - ./ci/deploy.sh all-of-us-rdr-staging config/config_staging.json ~/gcloud-credentials.key
#      - ./rest-api/test/test_server.sh -i https://all-of-us-rdr-staging.appspot.com -c ~/gcloud-credentials.key
#
## Stable and production deployments are not done automatically but can be
## manually executed with the test.sh and deploy.sh pair, e.g.:
## ./ci/deploy.sh all-of-us-rdr-stable config/config_stable.json <configurator key file>
## ./ci/deploy.sh all-of-us-rdr config/config_prod.json <configurator key file>
