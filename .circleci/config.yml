version: 2
jobs:
  build:
    working_directory: ~/curation/data_steward
    parallelism: 1
    shell: /bin/bash --login
    # CircleCI 2.0 does not support environment variables that refer to each other the same way as 1.0 did.
    # If any of these refer to each other, rewrite them so that they don't or see https://circleci.com/docs/2.0/env-vars/#interpolating-environment-variables-to-set-other-environment-variables .
    environment:
      - CIRCLE_ARTIFACTS: /tmp/circleci-artifacts

    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout:
          path: ~/curation
      - run:
          name: Allow google cloud to be added as apt repo
          command: |
            sudo apt-get update
            sudo apt install software-properties-common
      # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
      - run: mkdir -p $CIRCLE_ARTIFACTS
      - run:
          name: Add google-cloud-sdk repo to apt
          command: echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - run:
          name: Add google key to apt
          command: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - run:
          name: Install google-cloud-sdk
          command: |
            sudo apt-get update
            sudo apt-get install dpkg
            sudo apt-get install google-cloud-sdk
      - run:
          name: Make scripts executable
          command: chmod 700 ./ci/activate_creds.sh && chmod 700 ./ci/setup.sh && chmod 700 ./ci/create_bucket.sh
      - run:
          name: Activate service account
          command: ./ci/activate_creds.sh ${HOME}/gcloud-credentials-key.json
      - run:
          name: Set up environment variables
          command: ./init_env.sh
      - run:
          name: Create buckets and datasets
          command: ./ci/setup.sh
      # Dependencies
      - run:
          name: Add virtual environment activation to bash startup
          command: python3 -m venv ~/curation_env && echo "source ~/curation_env/bin/activate" >> $BASH_ENV
      - run:
          name: Upgrade pip and install requirements
          command: |
            pip install --upgrade pip setuptools
            pip install -r requirements.txt
            pip install -r deid/requirements.txt
            pip install -r dev_requirements.txt
      - run:
          name: Show bashrc file
          command: cat ${BASH_ENV}
      # Test
      #   This would typically be a build job when using workflows, possibly combined with build
      - run:
          name: Run unit tests
          command: |
            t=$(git log -1 --pretty=%B)
            if [[ "$t" == *"fast tests"* ]] ; then export ALL_TESTS="False" ; else export ALL_TESTS="True" ; fi
            mkdir -p test_results/coverage/xml
            mkdir -p test_results/coverage/html
            ./tests/run_tests.sh
          no_output_timeout: 3000s
          when:  always
      # Save test results
      - store_test_results:
          path: ~/curation/data_steward/test_results/coverage/xml
      # Save artifacts
      - store_artifacts:
          path: ~/curation/data_steward/test_results
          destination: test_results
      - store_artifacts:
          path: /tmp/circleci-artifacts
