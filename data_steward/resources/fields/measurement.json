[
    {
        "type": "integer", 
        "name": "measurement_id", 
        "mode": "required", 
        "description": "A unique identifier for each Measurement."
    }, 
    {
        "type": "integer", 
        "name": "person_id", 
        "mode": "required", 
        "description": "A foreign key identifier to the Person about whom the measurement was recorded. The demographic details of that Person are stored in the PERSON table."
    }, 
    {
        "type": "integer", 
        "name": "measurement_concept_id", 
        "mode": "required", 
        "description": "A foreign key to the standard measurement concept identifier in the Standardized Vocabularies."
    }, 
    {
        "type": "date", 
        "name": "measurement_date", 
        "mode": "required", 
        "description": "The date of the Measurement."
    }, 
    {
        "type": "timestamp", 
        "name": "measurement_datetime", 
        "mode": "nullable",
        "description": "The date and time of the Measurement. Some database systems don't have a datatype of time. To accomodate all temporal analyses, datatype datetime can be used (combining measurement_date and measurement_time [forum discussion](http://forums.ohdsi.org/t/date-time-and-datetime-problem-and-the-world-of-hours-and-1day/314))"
    }, 
    {
        "type": "integer", 
        "name": "measurement_type_concept_id", 
        "mode": "required", 
        "description": "A foreign key to the predefined Concept in the Standardized Vocabularies reflecting the provenance from where the Measurement record was recorded."
    }, 
    {
        "type": "integer", 
        "name": "operator_concept_id", 
        "mode": "nullable", 
        "description": "A foreign key identifier to the predefined Concept in the Standardized Vocabularies reflecting the mathematical operator that is applied to the value_as_number. Operators are <, <=, =, >=, >."
    }, 
    {
        "type": "float", 
        "name": "value_as_number", 
        "mode": "nullable", 
        "description": "A Measurement result where the result is expressed as a numeric value."
    }, 
    {
        "type": "integer", 
        "name": "value_as_concept_id", 
        "mode": "nullable", 
        "description": "A foreign key to a Measurement result represented as a Concept from the Standardized Vocabularies (e.g., positive/negative, present/absent, low/high, etc.)."
    }, 
    {
        "type": "integer", 
        "name": "unit_concept_id", 
        "mode": "nullable", 
        "description": "A foreign key to a Standard Concept ID of Measurement Units in the Standardized Vocabularies."
    }, 
    {
        "type": "float", 
        "name": "range_low", 
        "mode": "nullable", 
        "description": "The lower limit of the normal range of the Measurement result. The lower range is assumed to be of the same unit of measure as the Measurement value."
    }, 
    {
        "type": "float", 
        "name": "range_high", 
        "mode": "nullable", 
        "description": "The upper limit of the normal range of the Measurement. The upper range is assumed to be of the same unit of measure as the Measurement value."
    }, 
    {
        "type": "integer", 
        "name": "provider_id", 
        "mode": "nullable", 
        "description": "A foreign key to the provider in the PROVIDER table who was responsible for initiating or obtaining the measurement."
    }, 
    {
        "type": "integer", 
        "name": "visit_occurrence_id", 
        "mode": "nullable", 
        "description": "A foreign key to the Visit in the VISIT_OCCURRENCE table during which the Measurement was recorded."
    }, 
    {
        "type": "string", 
        "name": "measurement_source_value", 
        "mode": "nullable", 
        "description": "The Measurement name as it appears in the source data. This code is mapped to a Standard Concept in the Standardized Vocabularies and the original code is stored here for reference."
    }, 
    {
        "type": "integer", 
        "name": "measurement_source_concept_id", 
        "mode": "nullable", 
        "description": "A foreign key to a Concept in the Standard Vocabularies that refers to the code used in the source."
    }, 
    {
        "type": "string", 
        "name": "unit_source_value", 
        "mode": "nullable", 
        "description": "The source code for the unit as it appears in the source data. This code is mapped to a standard unit concept in the Standardized Vocabularies and the original code is stored here for reference."
    }, 
    {
        "type": "string", 
        "name": "value_source_value", 
        "mode": "nullable", 
        "description": "The source value associated with the content of the value_as_number or value_as_concept_id as stored in the source data."
    }
]